class Deque
{
    int *d;
    int f,r;
    int size;

public:
    Deque(int n)
    {
        size=n;
        d = new int[n];
        f= r= -1;
    }

    bool pushFront(int x)
    {
        if (isFull())
        {
            return false;
        }
        if (isEmpty())
        {
            f=r=0;
        }
        else
        {   if (f== 0)
            {f=size-1;}
            else
            {f--;
            }
        }

        d[f] = x;

        return true;
    }
    bool pushRear(int x)
    {
        if (isFull())
        {
            return false;
        }

        if (isEmpty())
        {
            f = r = 0;
        }
        else
        {
            if (r==size - 1)
            {
                r= 0;
            }
            else
            {
                r++;
            }
        }
        d[r] = x;

        return true;
    }

    int popFront()
    {
        if (isEmpty())
        {
            return -1;
        }

        int x = d[f];

        if (f == r){
            f = r= -1;
        }
        else
        {
            if (f==size - 1)
            {
                f=0;
            }
            else
            {
                f++;
            }
        }

        return x;
    }
    int popRear()
    {
        if (isEmpty())
        {
            return -1;
        }

        int x=d[r];

        if (f == r)
        {
            f= r = -1;
        }
        else
        {
            if (r==0)
            {
            r=size- 1;
            }
            else
            {
                r--;
            }
        }

        return x;
    }

    int getFront()
    {
        if (isEmpty())
        {
            return -1;
        }

        return d[f];
    }

    int getRear()
    {
        if (isEmpty())
        {
            return -1;
        }
        return d[r];
    }

    bool isEmpty()
    {
        if (f == -1)
        {
            return true;
        }
        return false;
    }

    bool isFull()
    {
        if ((f == 0 && r == size - 1) || (f==r + 1))
        {
            return true;
        }
        return false;
    }
};
